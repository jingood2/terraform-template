
name: Terraform Scan Workflow

on:
  push:
    branches:
      - develop
    paths:
      - .github/workflows/scanning-workflow.yml
      - .github/workflows/plan-and-apply.yml
      - terraform/**
      - .environments/*
      
permissions: write-all

jobs:
  terraform-scan:
    name: terraform-scan
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          terraform_version: 1.3.0

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Post Format
        if: always() && github.ref != 'refs/heads/main' && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
        uses: robburger/terraform-pr-commenter@v1
        with:
          commenter_type: fmt
          commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
          commenter_exitcode: ${{ steps.fmt.outputs.exitcode }}

      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          working_directory: .
          soft_fail_commenter: false
          tfsec_formats: default,sarif,checkstyle
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        #if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif.json
 

  deploy_dev:
    #if: contains(github.event.pull_request.labels.*.name, 'dev approved')
    needs: [terraform-scan]
    uses: ./.github/workflows/plan-and-apply.yml
    with:
      path: tfplan
      gh_environment: dev
      tf_version: 1.3.0
    secrets:
      #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DEV_DEPLOY_ROLE: ${{ secrets.DEV_DEPLOY_ROLE }}

  #deploy_prod:
  #  #if: contains(github.event.pull_request.labels.*.name, 'prd approved')
  #  needs: [deploy_dev]
  #  uses: ./.github/workflows/apply-workflow.yml
  #  with:
  #    path: tfplan
  #    gh_environment: prd
  #    tf_version: 1.3.0
  #  secrets:
  #    DEV_DEPLOY_ROLE: ${{ secrets.DEV_DEPLOY_ROLE}}
